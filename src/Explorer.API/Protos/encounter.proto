syntax = "proto3";

option csharp_namespace = "GrpcServiceTranscoding";
import "Protos/google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

service Encounter {
    rpc CreateSocialEncounter(SocialEnc) returns (SocialEnc){
        option (google.api.http) = {
            post: "/api/encounters/social"
            body: "*"
        };
    }

    rpc CreateHiddenLocationEncounter(HiddenLocationEnc) returns (HiddenLocationEnc){
        option (google.api.http) = {
            post: "/api/encounters/hiddenLocation"
            body: "*"
        };
    }

     rpc GetAllEncounters(PageRequest) returns (ListEnc){
          option (google.api.http) = {
            get: "/api/encounters"
          };
     }
}

message SocialEnc {
        string encounterId = 1;
        string name = 2;
        string description = 3;
        int32 xpPoints = 4;
        string status = 5;
        string type = 6;
        double latitude = 7;
        double longitude = 8;
        string id = 9;
        int32 touristsRequiredForCompletion = 10;
        double distanceTreshold = 11;
        repeated int64 touristIDs = 12;
        bool shouldBeApproved = 13;
}

message HiddenLocationEnc {
       string id = 1;
       string name = 2;
       string description = 3;
       int32 xpPoints = 4;
       string status = 5;
       string type = 6;
       double latitude = 7;
       double longitude = 8;
       string encounterId = 9;
       string imageURL = 10;
       double imageLatitude = 11;
       double imageLongitude = 12;
       double distanceTreshold = 13;
       bool shouldBeApproved = 14;
}

message Enc {
    string id = 1;
    string name = 2;
    string description = 3;
    int32 xpPoints = 4;
    string type = 5;
    double latitude = 6;
    double longitude = 7;
    bool shouldBeApproved = 8;
}

message ListEnc {
    repeated Enc results=1;
    int32 totalCount = 2;
}

message PageRequest {
    int32 page = 1;
    int32 pageSize = 2;
}

message HiddenLocationEncBase {
    string id = 1;
}